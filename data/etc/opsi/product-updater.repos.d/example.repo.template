[repository_example]
; Activate/deactivate the repository
active = true
; If the repository is an opsi depot, opsiDepotId should be set
; In that case it is not required (but allowed) to set baseUrl, dirs, username and password
opsiDepotId =
; The base url of a product package repository
baseUrl = http://download.uib.de
; Comma separated directories to include in search for product packages
; Use / if search should be done in baseUrl
dirs = opsi4.0/products/localboot, opsi4.0/products/netboot
; Comma separated list of productIds that will be updated
; If a product package file matches this regular expression it will be downloaded.
; Regular Expressions made under excludes can override anything under this.
includeProductIds =
; Comma separated list of regular expressions
; If a product package file matches one of these regular expressions it will not be downloaded
excludes = ^test.*
; Username for connection to repository
username =
; Password for connection to repository
password =
; AutoInstall will be checked if a product package is found on the repository
; and the product is not yet installed on the local depot
autoInstall = false
; AutoUpdate will be checked if a product is already installed on the local depot
; and a more recent product version is found in the repository
autoUpdate = true
; If autoSetup is set to true, the action request "setup" will be set for every updated product
; on all clients of the local depot where the installation status of the product is "installed"
autoSetup = false
; Set True if you want only Download packages without installation
onlyDownload = false
; Proxy to use for the connection.
; Set Proxy handler like: http://10.10.10.1:8080
proxy =
; Inherit ProductProperty defaults from master repository
; This feature only works when updating from another opsi-depot.
; To use it you have to set opsiDepotId
inheritProductProperties = false
