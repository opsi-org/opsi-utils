[general]
; Where to store package files
packageDir = /var/lib/opsi/repository
; Location of log file
logFile = /var/log/opsi/opsi-product-updater.log
; Log level 0...9
logLevel = 5
; set defaulttimeout
timeout = 60
; path to temp directory for package installation
tempdir = /tmp
; directory where the repository configurations are stored
repositoryConfigDir = /etc/opsi/product-updater.repos.d/

[notification]
; Activate/deactivate eMail notification
active = false
; SMTP server address
smtphost = smtp
; SMTP server port
smtpport = 25
; SMTP username
;smtpuser = username
; SMTP password for user
;smtppassword = s3cR3+
; Use STARTTLS
use_starttls = False
; Sender eMail address
sender = opsi-product-updater@localhost
; Comma separated list of receivers
receivers = root@localhost
; Subject of notification mail
subject = opsi-product-updater

[installation]
; If window start AND end are set, installation of the newly downloaded packages
; will only be done if the time when all downloads are completed is inside the time window
; Times have to be speciefied in the form HH:MM, i.e. 06:30
windowStart =
windowEnd =
; Comma separated list of product ids which will be installed even outside the time window
exceptProductIds =

[wol]
; If active is set to true, wake on lan will be sent to clients which need to perform actions
active = false
; Comma separated list of product ids which will not trigger wake on lan
excludeProductIds =
; Shutdown clients after installation?
; Before you set this to true please asure that the product shutdownwanted is installed on the depot
shutdownWanted = true
; Gap in seconds between wake ups
startGap = 10

[repository_uib]
; Activate/deactivate the repository
active = true
; If the repository is an opsi depot, opsiDepotId should be set
; In that case it is not required (but allowed) to set baseUrl, dirs, username and password
opsiDepotId =
; The base url of a product package repository
baseUrl = http://download.uib.de
; Comma separated directories to include in search for product packages
; Use / if search should be done in baseUrl
dirs = opsi4.0/products/localboot, opsi4.0/products/netboot
; Comma separated list of productIds that will be updated
; If a product package file matches this regular expression it will be downloaded.
; Regular Expressions made under excludes can override anything under this.
includeProductIds =
; Comma separated list of regular expressions
; If a product package file matches one of these regular expressions it will not be downloaded
; excludes = ^win.*
; Username for connection to repository
username =
; Password for connection to repository
password =
; AutoInstall will be checked if a product package is found on the repository
; and the product is not yet installed on the local depot
autoInstall = false
; AutoUpdate will be checked if a product is already installed on the local depot
; and a more recent product version is found in the repository
autoUpdate = true
; If autoSetup is set to true, the action request "setup" will be set for every updated product
; on all clients of the local depot where the installation status of the product is "installed"
autoSetup = false
; Set True if you want only Download packages without installation
onlyDownload = false
; Set Proxy handler like: http://10.10.10.1:8080
proxy =

[repository_uib_linux]
active = true
baseUrl = http://download.uib.de
dirs = opsi4.0/products/opsi-linux
autoInstall = false
autoUpdate = true
autoSetup = false
; Set Proxy handler like: http://10.10.10.1:8080
proxy =

[repository_uib_local_image]
active = false
baseUrl = http://download.uib.de
dirs = opsi4.0/products/opsi-local-image
autoInstall = false
autoUpdate = true
autoSetup = false
; Set Proxy handler like: http://10.10.10.1:8080
proxy =

[repository_master]
active = false
opsiDepotId =
autoInstall = true
autoUpdate = true
autoSetup = true
; Inherit ProductProperty defaults from master repository
inheritProductProperties = false
