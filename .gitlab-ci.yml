image: docker.uib.gmbh/opsi/dev/pybuilder:uib-python-3.11

stages:
  - test
  - build
  - integration_test
  - publish


pytest-pylint:
  stage: test
  script:
    - apt update
    - apt-get --yes --allow-downgrades install libsqlite3-0=3.16.2-5+deb9u1
    - apt -y install python3-newt gettext gzip asciidoc-base zstd
    - poetry config experimental.new-installer false
    - poetry lock --no-update
    - poetry install
    - poetry run pylint --disable=R,fixme opsiutils
    - poetry run pytest --tb=short -o junit_family=xunit2 --junitxml=testreport.xml --cov-append --cov opsiutils --cov-report term --cov-report xml -v tests


linux-pyinstaller:
  stage: build
  script:
    - apt update
    - apt-get --yes --allow-downgrades install libsqlite3-0=3.16.2-5+deb9u1
    - apt -y install python3-newt gettext gzip asciidoc-base zstd
    - poetry config experimental.new-installer false
    - poetry lock --no-update
    - poetry install
    - poetry run opsi-dev-cli -l info pyinstaller build
    - '[ "$CI_COMMIT_TAG" = "" ] && poetry run opsi-dev-cli -l info binary push dist/opsi-utils --prerelease="$CI_JOB_ID"'
    - '[ "$CI_COMMIT_TAG" = "" ] || poetry run opsi-dev-cli -l info binary push dist/opsi-utils'
    - mv dist/opsi-utils ./opsi-utils-amd64
    # Check if binary is working
    - opsi-utils-amd64/opsi-admin --version
    - opsi-dev-cli -l info binary pull
    - mv opsi-cli opsi-utils-amd64
  artifacts:
    name: 'opsi-utils-linux-pyinstaller'
    paths:
      - opsi-utils-amd64
    expire_in: 2 days

arm64-pyinstaller:
  stage: build
  tags:
    - arm64
  script:
    - apt update
    - apt-get --yes --allow-downgrades install libsqlite3-0=3.16.2-5+deb9u1
    - apt -y install python3-newt gettext gzip asciidoc-base zstd
    - poetry config experimental.new-installer false
    - poetry lock --no-update
    - poetry install
    - poetry run opsi-dev-cli -l info pyinstaller build
    - mv dist/opsi-utils ./opsi-utils-arm64
    # Check if binary is working
    - OPSI_HOSTNAME=test.uib.local opsi-utils-arm64/opsi-admin --version
    - opsi-dev-cli -l info binary pull
    - mv opsi-cli opsi-utils-arm64
  artifacts:
    name: 'opsi-utils-arm64-pyinstaller'
    paths:
      - opsi-utils-arm64
    expire_in: 2 days


integration_test:
  services:
    - name: mysql:latest
      command:
        - --max_connections=1000
        - --default-authentication-plugin=mysql_native_password
    - name: redislabs/redistimeseries:latest
      alias: redis
  variables:
    MYSQL_ROOT_PASSWORD: "opsi"
    MYSQL_DATABASE: "opsitest"
    MYSQL_USER: "opsi"
    MYSQL_PASSWORD: "opsi"
    MYSQL_HOST: mysql
    REDIS_HOST: redis
    OPSI_ADMIN_PASSWORD: vhahd8usaz
    OPSI_HOST_ROLE: configserver
    OPSI_HOST_ID: "test.uib.gmbh"
    OPSI_TFTPBOOT: "false"
    OPSICONFD_LOG_LEVEL: 6
    OPSICONFD_RESTORE_BACKUP_URL: "http://binaryindex.uib.gmbh/development/testbackup/all/all/testbackup_all_all_1.1.tar.gz"
  stage: integration_test
  image:
    name: docker.uib.gmbh/opsi/opsi-server:4.3-development
    entrypoint: [""]
  script:
    - bash /entrypoint.sh &
    - while ! nc -v -z -w3 localhost 4447 > /dev/null 2>&1; do sleep 1; done
    - source /entrypoint.sh set_environment_vars  # to set hosts for redis/grafana
    - apt update
    - apt -y install zstd zsync
    - for file in integration_tests/*.sh; do bash "$file"; done


#obs_int:
#  stage: publish
#  script:
#    - opsi-dev-tool -l info --obs-update-package https://obs.uib.gmbh home:uibmz:opsi:4.3:development
#    - opsi-dev-tool -l 7 --create-changelog output/
#    - opsi-dev-cli release-service register-package-version opsi-utils SERVER_PACKAGE --changelog-file output/debian-changelog
#    - opsi-dev-cli release-service push-repository-state opsi-utils SERVER_PACKAGE SERVER_PACKAGE-4.3-development
#  only:
#    - tags

obs_ext:
  stage: publish
  script:
    - opsi-dev-tool -l info --obs-update-package https://build.opensuse.org home:uibmz:opsi:4.3:development
  only:
    - tags
